# expected jinja variables, set by calling python script:
#
# {{gateway}} - typically 'faraday.inria.fr'
# {{slicename}} - typically 'inria_mep'
# {{logs}} - typically 'True' or 'False'
# {{auto_start}} - typically 'True' or 'False'
# {{nodes}} - typically {'core': 'fit01', 'ran': 'fit02', 'mep' : 'fit03'} or {'core': 'fit01', 'ran': 'pc01', 'mep' : 'fit03'}
# {{nodes_str}} - typically '1 2 3' or '1 3'
# {{phones}} - typically [1, 2]
# {{wait1_dict}} - typically  {1: "echo 'wait for 55s for eNB to start up before waking up phone1'; sleep 55"}
# {{wait2_dict}} - typically {1: "echo 'wait for 15s for phone1 before starting tests'; sleep 15"}
# {{quectel_dict}} - typically  {'7': 'fit07'}
# {{qhat_dict}} - typically {'1': 'qhat01', '2': 'qhat02'}
# {{rru}} - typically 'b210' or 'rfsim'
# {{regcred}} - typically {'name': 'jdoe', 'password': 'XX', 'email': 'jdoe@yahoo.fr'}
# {{image}} - typically 'kubernetes'
# {{quectel_image}} - typically 'quectel-mbim'
# {{verbose}} - typically 'True' or 'False'

nodes:
  - id: faraday
    hostname: {{gateway}}
    username: {{slicename}}
    formatter: TimeHostFormatter
    verbose: {{verbose}}
  {% for function, hostname in nodes.items() %}
  - id: {{function}}_node
    hostname: {{hostname}}
    gateway: faraday
    username: root
    formatter: TimeHostFormatter
    verbose: {{verbose}}
  {% endfor %}
  {% for n, hostname in quectel_dict.items() %}
  - id: quectel_node_{{n}}
    hostname: {{hostname}}
    gateway: faraday
    username: root
    formatter: TimeHostFormatter
    verbose: {{verbose}}
  {% endfor %}
  {% for n, hostname in qhat_dict.items() %}
  - id: qhat_node_{{n}}
    hostname: {{hostname}}
    gateway: faraday
    username: root
    formatter: TimeHostFormatter
    verbose: {{verbose}}
  {% endfor %}

jobs:
  - id: load-image
    node: faraday
    critical: True
    verbose: {{verbose}}
    label: load image {{image}} on FIT nodes
    commands:
      - type: Run
        command: >
          rhubarbe load -i {{image}} {{nodes_str}} -t 400;
          rhubarbe wait {{nodes_str}}

  - id: prepare-ran
    required: load-image
    node: faraday
    critical: True
    verbose: {{verbose}}
    label: prepare ran
    commands:
      - type: Run
        command: >
    {% if nodes['ran'] == "pc01" %}
          rhubarbe pdu on pc01; sleep 30; rhubarbe pdu on usrp01; sleep 20
    {% elif nodes['ran'] == "pc02" %}
          rhubarbe pdu on pc02; sleep 30; rhubarbe pdu on usrp02; sleep 20
    {% else %}
      {% if rru == "b210" %}    
          rhubarbe wait {{nodes['ran']}};
          rhubarbe usrpon {{nodes['ran']}}
      {% else %}
        {% if rru == "rfsim" %}
          rhubarbe wait {{nodes['ran']}}
        {% else %}
          rhubarbe-pdu on {{rru}}
        {% endif %}
      {% endif %}
    {% endif %}


  {% if quectel_dict %}
  - id: prepare-quectels
    node: faraday
    critical: True
    verbose: {{verbose}}
    label: load quectel image {{quectel_image}} on quectel UE nodes
    commands:
      - type: Run
        command: >
          rhubarbe usrpoff {%for n in quectel_dict.keys()%}{{n}} {% endfor %}
      - type: Run
        command: >
          rhubarbe load -i {{quectel_image}} -t 400  {%for n in quectel_dict.keys()%}{{n}} {% endfor %}
      - type: Run
        command: >
          rhubarbe wait {%for n in quectel_dict.keys()%}{{n}} {% endfor %}
      - type: Run
        command: >
          rhubarbe usrpon {%for n in quectel_dict.keys()%}{{n}} {% endfor %}
      - type: Run
        command: sleep 60
  {% endif %}

  {% if qhat_dict %}
  - id: prepare-qhats
    node: faraday
    critical: True
    verbose: {{verbose}}
    label: switch on qhat UE nodes
    commands:
      - type: Run
        command: >
          {%for n in qhat_dict.keys()%}rhubarbe-pdu on qhat0{{n}}; {% endfor %}
      - type: Run
        command: sleep 30
  {% endif %}

  {% for n in quectel_dict.keys() %}
  - id: init-quectel-node-{{n}}
    required: prepare-quectels
    node: quectel_node_{{n}}
    critical: True
    verbose: {{verbose}}
    label: init Quectel UE on fit node {{n}}
    commands:
      - type: RunScript
        command: >
          {{nodes_sh}} check-quectel-on
        includes: {{INCLUDES}}
      - type: RunScript
        command: >
          {{nodes_sh}} quectel-init
        includes: {{INCLUDES}}
  {% endfor %}

  {% for n in qhat_dict.keys() %}
  - id: init-qhat-node-{{n}}
    required: prepare-qhats
    node: qhat_node_{{n}}
    critical: True
    verbose: {{verbose}}
    label: init qhat0{{n}} UE 
    commands:
      - type: Run
        command: prepare-ue
  {% endfor %}

  # for now, we do not to switch off other nodes 
  # - id: turn-off-others
  #   node: faraday
  #   critical: False
  #   verbose: {{verbose}}
  #   label: turn off unused nodes
  #   commands:
  #   - type: Run
  #     command: >
  #       rhubarbe bye -- {% for h in nodes.values() %}~{{h}} {% endfor %}
  #   - type: Run
  #     command: sleep 1
  #

  - id: init-core
    required:
      - load-image
    node: core_node
    critical: True
    verbose: {{verbose}}
    label: >
      Clone blueprint, configure IP forwarding for core-network host and launch containers
    commands:
      - type: RunScript
        command: core-network.sh init

  - id: init-ran
    required:
      - prepare-ran
    node: ran_node
    critical: True
    verbose: {{verbose}}
    label: >
      Clone blueprint, configure IP forwarding for ran host and launch containers
    commands:
      - type: RunScript
        command: ran.sh init {{nodes['core']}}

  - id: init-prometheus
    required: load-image
    node: prometheus_node
    critical: True
    verbose: {{verbose}}
    label: >
      Clone blueprint, configure IP forwarding for prometheus host and launch containers
    commands:
      - type: RunScript
        command: prometheus.sh init

  - id: init-mep
    required:
      - load-image
    node: mep_node
    critical: True
    verbose: {{verbose}}
    label: >
       Clone blueprint and configure IP forwarding for mep host
    commands:
      - type: RunScript
        command: mep.sh init {{nodes['core']}} {{nodes['ran']}}

  - id: start-core
    required:
      - init-core
    node: core_node
    critical: True
    verbose: {{verbose}}
    label: >
      Deploy core-network and cm docker containers
    commands:
      - type: RunScript
        command: core-network.sh start {{rru}}
 
  - id: start-ran
    required:
      - init-ran
      - start-core
    node: ran_node
    critical: True
    verbose: {{verbose}}
    label: >
      Deploy ran container and start oai-gnb, oai-flexric, rabbitmq and then, rnis-xapp
    commands:
      - type: RunScript
        command: ran.sh start {{rru}}


  - id: start-prometheus
    required:
      - init-ran
      - start-core
    node: prometheus_node
    critical: True
    verbose: {{verbose}}
    label: >
      Deploy prometheus container and start prometheus
    commands:
      - type: RunScript
        command: prometheus.sh start

 
  - id: start-mep
    required:
      - init-mep
      - start-ran
    node: mep_node
    critical: True
    verbose: {{verbose}}
    label: >
      Deploy mep container and start oai-mep and oai-rnis
    commands:
      - type: RunScript
        command: mep.sh start
 
  {% for n, cmd in wait1_dict.items() %}
  - id: attach-phone{{n}}
    required:
      - start-mep
    node: faraday
    critical: False
    verbose: {{verbose}}
    label: >
      sleep and then wake-up phone{{n}}
    commands:
      - type: Run
        command: {{cmd}}
      - type: RunScript
        command: >
          {{faraday_sh}} macphone{{n}} r2lab-embedded/shell/macphone.sh phone-on
        includes: {{INCLUDES}}
  {% endfor %}

  {% for n, cmd in wait2_dict.items() %}
  - id: test-cx-phone{{n}}
    required:
      - attach-phone{{n}}
    node: faraday
    critical: False
    verbose: {{verbose}}
    label: >
      sleep again, then run test-cx and start bandwidth test with speedtest app
    commands:
      - type: Run
        command: {{cmd}} 
      - type: RunScript
        command: >
          {{faraday_sh}} macphone{{n}} r2lab-embedded/shell/macphone.sh phone-check-cx
        includes: {{INCLUDES}}
      - type: RunScript
        command: >
          {{faraday_sh}} macphone{{n}} r2lab-embedded/shell/macphone.sh phone-start-app
        includes: {{INCLUDES}}
  {% endfor %}

  {% for n in quectel_dict.keys() %}
  - id: attach-quectel-node-{{n}}
    required:
      - start-mep
      - init-quectel-node-{{n}}
    node: quectel_node_{{n}}
    critical: False
    verbose: {{verbose}}
    label: >
      sleep 60s, attach quectel UE on fit node {{n}}; sleep 20s and test cx
    commands:
      - type: Run
        command: sleep 60
      - type: RunScript
        command: >
          {{nodes_sh}} start-quectel
        includes: {{INCLUDES}}
      - type: Run
        command: sleep 20
      - type: RunScript
        command: >
          {{nodes_sh}} check-quectel-cx
        includes: {{INCLUDES}}
  {% endfor %}

  {% for n in qhat_dict.keys() %}
  - id: attach-qhat-node-{{n}}
    required:
      - start-mep
      - init-qhat-node-{{n}}
    node: qhat_node_{{n}}
    critical: False
    verbose: {{verbose}}
    label: >
      sleep 60s, attach qhat0{{n}} UE; sleep 20s and test cx
    commands:
      - type: Run
        command: sleep 60
      - type: RunScript
        command: >
          {{nodes_sh}} start-quectel
        includes: {{INCLUDES}}
      - type: Run
        command: sleep 20
      - type: RunScript
        command: >
          {{nodes_sh}} check-quectel-cx
        includes: {{INCLUDES}}
  {% endfor %}

  - id: stop-core
    required: start-core
    node: core_node
    critical: False
    verbose: {{verbose}}
    label: >
      Delete core network and cm and then remove core-network container
    commands:
      - type: RunScript
        command: core-network.sh stop {{rru}} {{logs}}
      {% if logs == 'True' %}
      - type: Pull
        remotepaths: "/tmp/oai5g-stats-core.tgz"
        localpath: "./STATS/"
      {% endif %}

 
  - id: stop-ran
    required: start-ran
    node: ran_node
    critical: False
    verbose: {{verbose}}
    label: >
      Delete oai-gnb, oai-flexric, rabbitmq and rnis-xapp and then remove ran container and 
    commands:
      - type: RunScript
        command: ran.sh stop {{rru}} {{logs}}
      {% if logs == 'True' %}
      - type: Pull
        remotepaths: "/tmp/oai5g-stats-ran.tgz"
        localpath: "./STATS/"
      {% endif %}


  - id: stop-prometheus
    required: start-ran
    node: prometheus_node
    critical: False
    verbose: {{verbose}}
    label: >
      Delete prometheus and then remove prometheus container
    commands:
      - type: RunScript
        command: prometheus.sh stop {{rru}} {{logs}}
      {% if logs == 'True' %}
      - type: Pull
        remotepaths: "/tmp/oai5g-stats-ran.tgz"
        localpath: "./STATS/"
      {% endif %}


  - id: stop-mep
    required: start-mep
    node: mep_node
    critical: False
    verbose: {{verbose}}
    label: >
      Delete oai-mep and oai-rnis and then remove mep container
    commands:
      - type: RunScript
        command: mep.sh stop {{logs}}
      {% if logs == 'True' %}
      - type: Pull
        remotepaths: "/tmp/oai5g-stats-mep.tgz"
        localpath: "./STATS/"
      {% endif %}


  {% for n, cmd in wait1_dict.items() %}
  - id: detach-phone{{n}}
    required:
      - stop-ran
    node: faraday
    critical: False
    verbose: {{verbose}}
    label: >
      detach phone{{n}}
    commands:
      - type: RunScript
        command: >
          {{faraday_sh}} macphone{{n}} r2lab-embedded/shell/macphone.sh phone-off
        includes: {{INCLUDES}}
  {% endfor %}

  {% for n in quectel_dict.keys() %}
  - id: detach-quectel-node-{{n}}
    required:
      - stop-ran
    node: quectel_node_{{n}}
    critical: False
    verbose: {{verbose}}
    label: >
      detach quectel UE on fit node {{n}}
    commands:
      - type: RunScript
        command: >
          {{nodes_sh}} stop-quectel
        includes: {{INCLUDES}}
  {% endfor %}

  {% for n in qhat_dict.keys() %}
  - id: detach-qhat-node-{{n}}
    required:
      - stop-ran
    node: qhat_node_{{n}}
    critical: False
    verbose: {{verbose}}
    label: >
      detach qhat0{{n}} UE
    commands:
      - type: RunScript
        command: >
          {{nodes_sh}} stop-quectel
        includes: {{INCLUDES}}
  {% endfor %}


  - id: cleanup
    required: stop-ran
    node: faraday
    critical: False
    verbose: {{verbose}}
    commands:
      - type: Run
        command: >
  {% if rru == "b210" %}    
    {% if nodes['ran'] == "pc01" %}
          rhubarbe pdu off usrp01;
          rhubarbe pdu off pc01;
    {% elif nodes['ran'] == "pc02" %}
          rhubarbe pdu off usrp02;
          rhubarbe pdu off pc02;
    {% else %}
          rhubarbe usrpoff {{nodes['ran']}};
    {% endif %}
          rhubarbe off {{nodes_str}}
  {% else %}
    {% if rru != "rfsim" %}
          rhubarbe-pdu off {{rru}};
    {% endif %}
          rhubarbe off {{nodes_str}}
  {% endif %}


  {% if quectel_dict %}
  - id: cleanup-quectels
    required:
    {% for n in quectel_dict.keys() %}
    - detach-quectel-node-{{n}}
    {% endfor %}
    node: faraday
    critical: False
    verbose: {{verbose}}
    label: Turn off quectel nodes {{quectel_dict.keys()}}
    commands:
      - type: Run
        command: rhubarbe usrpoff {%for n in quectel_dict.keys()%}{{n}} {% endfor %}
      - type: Run
        command: rhubarbe off {%for n in quectel_dict.keys()%}{{n}} {% endfor %}
  {% endif %}

  {% if qhat_dict %}
  - id: cleanup-qhats
    required:
    {% for n in qhat_dict.keys() %}
    - detach-qhat-node-{{n}}
    {% endfor %}
    node: faraday
    critical: False
    verbose: {{verbose}}
    label: Turn off qhat nodes {{qhat_dict.keys()}}
    commands:
      - type: Run
        command: {%for n in qhat_dict.keys()%}rhubarbe-pdu off qhat0{{n}}; {% endfor %}
  {% endif %}
